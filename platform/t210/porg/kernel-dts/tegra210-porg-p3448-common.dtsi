/*
 * arch/arm64/boot/dts/tegra210-porg-p3448-common.dtsi
 *
 * Copyright (c) 2018-2019, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */
/dts-v1/;
/memreserve/ 0x80000000 0x00020000;

#include <t210-common-platforms/tegra210-common.dtsi>
#include <tegra210-soc/tegra210-sdhci.dtsi>
#include <t210-common-platforms/tegra210-p2530-common.dtsi>
#include "porg-platforms/tegra210-porg-power-tree-p3448-0000-a00.dtsi"
#include "porg-platforms/tegra210-pinmux-drive-sdmmc-common.dtsi"
#include "porg-platforms/tegra210-porg-pwm-fan.dtsi"
#include "porg-platforms/tegra210-porg-camera.dtsi"
#include "porg-platforms/tegra210-porg-camera-rbpcv2-imx219.dtsi"
#include <t210-common-platforms/tegra210-ers-hdmi-e2190-1100-a00.dtsi>
#include <t210-common-platforms/tegra210-dp.dtsi>
#include "porg-platforms/tegra210-porg-thermal.dtsi"
#include "porg-platforms/tegra210-porg-thermal-fan-est.dtsi"
#include "porg-platforms/tegra210-porg-keys-p3448-0000-a00.dtsi"
#include <dt-bindings/iio/meter/ina3221x.h>
#include <tegra210-soc/tegra210-audio.dtsi>
#include "porg-platforms/tegra210-porg-cpufreq.dtsi"
#include "porg-platforms/tegra210-porg-powermon-p3448-0000-a00.dtsi"
#include "porg-plugin-manager/tegra210-porg-eeprom-manager.dtsi"
#include "porg-plugin-manager/tegra210-porg-plugin-manager.dtsi"
#include <tegra210-soc/mods-simple-bus.dtsi>
#include "porg-platforms/tegra210-porg-extcon-p3448-0000-a00.dtsi"
#include "porg-platforms/tegra210-porg-p3448-emc-a00.dtsi"
#include "porg-platforms/tegra210-porg-pcie.dtsi"
#include "porg-platforms/tegra210-porg-prods.dtsi"
#include "porg-platforms/tegra210-porg-super-module-e2614.dtsi"

/ {
        nvidia,boardids = "3448";
        nvidia,proc-boardid = "3448";
        nvidia,pmu-boardid = "3448";

	chosen {
		nvidia,tegra-porg-sku;
		nvidia,tegra-always-on-personality;
		bootargs = "androidboot.secureos=tlk earlycon=uart8250,mmio32,0x70006000";
	};


	firmware {
		android {
			compatible = "android,firmware";
			first_stage_delay = "1";
			fstab {
				compatible = "android,fstab";
				system {
					compatible = "android,system";
					dev = "/dev/block/platform/sdhci-tegra.0/by-name/APP";
					type = "ext4";
					mnt_flags = "ro,noatime";
					fsmgr_flags = "wait";
				};
				vendor {
					compatible = "android,vendor";
					dev = "/dev/block/platform/sdhci-tegra.0/by-name/vendor";
					type = "ext4";
					mnt_flags = "ro,noatime";
					fsmgr_flags = "wait";
				};
			};
		};
	};

	rollback-protection {
		status = "okay";
	};

	watchdog@60005100 {
		status = "okay";
	};

	tegra_wdt: watchdog@60005100 {
		status = "disabled";
	};

	bcmdhd_wlan {
		fw_path = "/vendor/firmware/fw_bcmdhd.bin";
		nv_path = "/vendor/firmware/nvram_jetson_e_4356.txt";
		tuned_nv_path = "/vendor/firmware/nvram_jetson_e_antenna_tuned_4356.txt";
		clm_blob_path = "/vendor/firmware/bcmdhd_clm_foster.blob";
		builtin-roam-disabled;
		country_code_map {
			CC_XV {
				iso_abbrev = "XV";
				custom_locale = "XX";
				custom_locale_rev = <0>;
			};
			CC_US {
				iso_abbrev = "US";
				custom_locale = "Q2";
				custom_locale_rev = <0>;
			};
			CC_CA {
				iso_abbrev = "CA";
				custom_locale = "Q2";
				custom_locale_rev = <0>;
			};
			CC_SG {
				iso_abbrev = "SG";
				custom_locale = "Q2";
				custom_locale_rev = <0>;
			};

			CC_AT {
				iso_abbrev = "AT";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_BE {
				iso_abbrev = "BE";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_BG {
				iso_abbrev = "BG";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_HR {
				iso_abbrev = "HR";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_CY {
				iso_abbrev = "CY";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_CZ {
				iso_abbrev = "CZ";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_DK {
				iso_abbrev = "DK";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_EE {
				iso_abbrev = "EE";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_FI {
				iso_abbrev = "FI";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_FR {
				iso_abbrev = "FR";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_DE {
				iso_abbrev = "DE";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_GR {
				iso_abbrev = "GR";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_HU {
				iso_abbrev = "HU";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_IS {
				iso_abbrev = "IS";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_IE {
				iso_abbrev = "IE";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_IT {
				iso_abbrev = "IT";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_LV {
				iso_abbrev = "LV";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_LI {
				iso_abbrev = "LI";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_LT {
				iso_abbrev = "LT";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_LU {
				iso_abbrev = "LU";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_MT {
				iso_abbrev = "MT";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_NL {
				iso_abbrev = "NL";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_NO {
				iso_abbrev = "NO";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_PL {
				iso_abbrev = "PL";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_PT {
				iso_abbrev = "PT";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_RO {
				iso_abbrev = "RO";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_SK {
				iso_abbrev = "SK";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_SI {
				iso_abbrev = "SI";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_ES {
				iso_abbrev = "ES";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_SE {
				iso_abbrev = "SE";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_CH {
				iso_abbrev = "CH";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_TR {
				iso_abbrev = "TR";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_GB {
				iso_abbrev = "GB";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_EU {
				iso_abbrev = "EU";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_E0 {
				iso_abbrev = "E0";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_AP {
				iso_abbrev = "AP";
				custom_locale = "XV";
				custom_locale_rev = <0>;
			};
			CC_RU {
				iso_abbrev = "RU";
				custom_locale = "RU";
				custom_locale_rev = <0>;
			};
			CC_AU {
				iso_abbrev = "AU";
				custom_locale = "AU";
				custom_locale_rev = <0>;
			};
			CC_NZ {
				iso_abbrev = "NZ";
				custom_locale = "AU";
				custom_locale_rev = <0>;
			};
			CC_JP {
				iso_abbrev = "JP";
				custom_locale = "JP";
				custom_locale_rev = <0>;
			};
			CC_KR {
				iso_abbrev = "KR";
				custom_locale = "KR";
				custom_locale_rev = <0>;
			};
			CC_TW {
				iso_abbrev = "TW";
				custom_locale = "TW";
				custom_locale_rev = <0>;
			};
			CC_CN {
				iso_abbrev = "CN";
				custom_locale = "CN";
				custom_locale_rev = <0>;
			};
			CC_HK {
				iso_abbrev = "HK";
				custom_locale = "E0";
				custom_locale_rev = <0>;
			};
			CC_IN {
				iso_abbrev = "IN";
				custom_locale = "IN";
				custom_locale_rev = <0>;
			};
		};
	};


	host1x {
		/* Camera unit clocks */
		assigned-clocks = <&tegra_car TEGRA210_CLK_EXTERN3>,
						<&tegra_car TEGRA210_CLK_CILE>,
						<&tegra_car TEGRA210_CLK_CILCD>,
						<&tegra_car TEGRA210_CLK_CILAB>,
						<&tegra_car TEGRA210_CLK_VI_I2C>,
						<&tegra_car TEGRA210_CLK_CLK_OUT_3_MUX>,
						<&tegra_car TEGRA210_CLK_VI>,
						<&tegra_car TEGRA210_CLK_ISP>,
						<&tegra_car TEGRA210_CLK_ISPB>;
		assigned-clock-parents = <&tegra_car TEGRA210_CLK_PLL_P>,
						<&tegra_car TEGRA210_CLK_PLL_P>,
						<&tegra_car TEGRA210_CLK_PLL_P>,
						<&tegra_car TEGRA210_CLK_PLL_P>,
						<&tegra_car TEGRA210_CLK_PLL_P>,
						<&tegra_car TEGRA210_CLK_EXTERN3>,
						<&tegra_car TEGRA210_CLK_PLL_C>,
						<&tegra_car TEGRA210_CLK_PLL_C>,
						<&tegra_car TEGRA210_CLK_ISP>;
		assigned-clock-rates = <24000000>,
						<102000000>,
						<102000000>,
						<102000000>,
						<102000000>,
						<24000000>,
						<408000000>,
						<408000000>,
						<0>;

		/* tegradc.0 */
		dc@54200000 {
			status = "okay";
			nvidia,dc-flags = <TEGRA_DC_FLAG_ENABLED>;
			nvidia,emc-clk-rate = <300000000>;
			nvidia,cmu-enable = <1>;
			nvidia,fb-bpp = <32>; /* bits per pixel */
			nvidia,fb-flags = <TEGRA_FB_FLIP_ON_PROBE>;
			nvidia,dc-or-node = "/host1x/sor1";
			nvidia,50hz-ss-war;
			nvidia,dc-connector = <&sor1>;
		};
		dc@54240000 {
			status = "okay";
			nvidia,dc-flags = <TEGRA_DC_FLAG_ENABLED>;
			nvidia,emc-clk-rate = <300000000>;
			nvidia,cmu-enable = <1>;
			nvidia,fb-bpp = <32>; /* bits per pixel */
			nvidia,fb-flags = <TEGRA_FB_FLIP_ON_PROBE>;
			nvidia,dc-or-node = "/host1x/sor";
			nvidia,50hz-ss-war;
			nvidia,dc-connector = <&sor0>;
		};
		sor {
			status = "okay";
			nvidia,xbar-ctrl = <2 1 0 3 4>;
			dp-display {
				status = "okay";
			};
		};
		sor1 {
			/* Compared to Jetson-TX1's baseboard (P2597), HDMI TX
			 * lanes 0 and 2 have been swapped in Porg's baseboard
			 * (P3448) making it a straight lane mapping between
			 * SOR1 and the pad.
			 */
			nvidia,xbar-ctrl = <0 1 2 3 4>;
			status = "okay";
			hdmi-display {
				status = "okay";
			};
		};
		dpaux {
			status = "okay";
		};
		dpaux1 {
			status = "okay";
		};
	};

	pwm@7000a000 {
		nvidia,no-clk-sleeping-in-ops;
	};

	pmc@7000e400 {
		nvidia,core-pwr-req-active-high;
		nvidia,sys-clock-req-active-high;
		iopad-defaults {
			audio-hv-pads {
				pins = "audio-hv";
				nvidia,power-source-voltage = <TEGRA_IO_PAD_VOLTAGE_1800000UV>;
			};

			spi-hv-pads {
				pins = "spi-hv";
				nvidia,power-source-voltage = <TEGRA_IO_PAD_VOLTAGE_1800000UV>;
			};

			gpio-pads {
				pins = "gpio";
				nvidia,power-source-voltage = <TEGRA_IO_PAD_VOLTAGE_1800000UV>;
			};

			sdmmc-io-pads {
				pins = "sdmmc1", "sdmmc3";
				nvidia,enable-voltage-switching;
			};
		};
	};

	spi@7000d400 { /* SPI 1 to 40 pin header */
		status = "okay";
	};

	spi@7000d600 { /* SPI 2 to 40 pin header */
		status = "okay";
	};

	spi@7000d800 {
		status = "disabled";
	};

	spi@7000da00 {
		status = "disabled";
	};

	spi@70410000 {
		status = "okay";
		spi-max-frequency = <104000000>;
		spiflash@0 {
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "MX25U3235F";
			reg = <0>;
			spi-max-frequency = <104000000>;
			controller-data {
				nvidia,x1-len-limit = <4194304>;
				nvidia,x1-bus-speed = <104000000>;
				nvidia,x1-dymmy-cycle = <8>;
				nvidia,ctrl-bus-clk-ratio = /bits/ 8 <0x01>;
			};
		};
	};

	sdhci@700b0600 { /* SDMMC4 for EMMC */
		uhs-mask = <0x0>;
		mmc-hs400-enhanced-strobe;
		built-in;
		power-off-rail;
		status = "disabled";
		bus-width = <8>;
		non-removable;
	};

	sdhci@700b0200 { /* SDMMC2 for Wifi */
		uhs-mask = <0x8>;
		power-off-rail;
		force-non-removable-rescan;
		status = "disabled";
	};

	sdhci@700b0000 { /* SDMMC1 for SD card */
		default-drv-type = <1>;
		cd-gpios = <&gpio TEGRA_GPIO(Z, 1) 0>;
		sd-uhs-sdr104;
		sd-uhs-sdr50;
		sd-uhs-sdr25;
		sd-uhs-sdr12;
		mmc-ddr-1_8v;
		mmc-hs200-1_8v;
		nvidia,cd-wakeup-capable;
		nvidia,update-pinctrl-settings;
		nvidia,pmc-wakeup = <&tegra_pmc PMC_WAKE_TYPE_GPIO 35
			PMC_TRIGGER_TYPE_NONE>;
		no-sdio;
		no-mmc;
		disable-wp;
		status = "okay";
	};

	aconnect@702c0000 {
		adma {
			status = "okay";
		};

		ahub {
			i2s@702d1000 {
				status = "disabled";
			};

			i2s@702d1100 {
				status = "disabled";
			};

			i2s@702d1200 {
				regulator-supplies = "vdd-1v8-dmic";
				vdd-1v8-dmic-supply = <&max77620_sd3>;
				fsync-width = <15>;
				status = "okay";
			};

			i2s@702d1300 {
				regulator-supplies = "vddio-uart";
				vddio-uart-supply = <&max77620_sd3>;
				fsync-width = <15>;
				status = "okay";

				/*
				 * I2S4 on Jetson Nano uses the I2S4B pads
                                 * and to use these pads bit 0 in the I2S_CYA
				 * register must be set.
				 */
				enable-cya;
			};

			i2s@702d1400 {
				status = "disabled";
			};

			dmic@702d4000 {
				regulator-supplies = "vdd-1v8-dmic";
				vdd-1v8-dmic-supply = <&max77620_sd3>;
				status = "okay";
			};

			dmic@702d4100 {
				regulator-supplies = "vdd-1v8-dmic";
				vdd-1v8-dmic-supply = <&max77620_sd3>;
				status = "okay";
			};

			dmic@702d4200 {
				status = "disabled";
			};
		};
	};

	hda@70030000 {
		status = "okay";
	};

	sound_card: sound {
		status = "okay";
		compatible = "nvidia,tegra-audio-t210ref-mobile-rt565x";
		nvidia,model = "tegra-snd-t210ref-mobile-rt565x";

		clocks = <&tegra_car TEGRA210_CLK_PLL_P_OUT1>,
			<&tegra_car TEGRA210_CLK_PLL_A>,
			<&tegra_car TEGRA210_CLK_PLL_A_OUT0>,
			<&tegra_car TEGRA210_CLK_D_AUDIO>,
			<&tegra_car TEGRA210_CLK_CLK_M>,
			<&tegra_car TEGRA210_CLK_EXTERN1>;
		clock-names = "pll_p_out1", "pll_a", "pll_a_out0", "ahub",
			"clk_m", "extern1";

		assigned-clocks = <&tegra_car TEGRA210_CLK_PLL_A>,
			<&tegra_car TEGRA210_CLK_PLL_A_OUT0>,
			<&tegra_car TEGRA210_CLK_D_AUDIO>,
			<&tegra_car TEGRA210_CLK_EXTERN1>;
		assigned-clock-rates = <368640000>, <36864000>,
			<36864000>, <12288000>;
		nvidia,num-codec-link = <4>;

		nvidia,audio-routing =
			"x Headphone",	"x OUT",
			"x IN",		"x Mic",
			"y Headphone",	"y OUT",
			"y IN",		"y Mic",
			"a IN",		"a Mic",
			"b IN",		"b Mic";

		nvidia,xbar = <&tegra_axbar>;

		i2s_dai_link1: nvidia,dai-link-1 {
			link-name = "spdif-dit-0";
			cpu-dai = <&tegra_i2s4>;
			codec-dai = <&spdif_dit0>;
			cpu-dai-name = "I2S4";
			codec-dai-name = "dit-hifi";
			format = "i2s";
			bitclock-slave;
			frame-slave;
			bitclock-noninversion;
			frame-noninversion;
			bit-format = "s16_le";
			bclk_ratio = <1>;
			srate = <48000>;
			num-channel = <2>;
			ignore_suspend;
			name-prefix = "x";
			status = "okay";
		};
		nvidia,dai-link-2 {
			link-name = "spdif-dit-1";
			cpu-dai = <&tegra_i2s3>;
			codec-dai = <&spdif_dit1>;
			cpu-dai-name = "I2S3";
			codec-dai-name = "dit-hifi";
			format = "i2s";
			bitclock-slave;
			frame-slave;
			bitclock-noninversion;
			frame-noninversion;
			bit-format = "s16_le";
			bclk_ratio = <1>;
			srate = <48000>;
			num-channel = <2>;
			ignore_suspend;
			name-prefix = "y";
			status = "okay";
		};
		nvidia,dai-link-3 {
			link-name = "spdif-dit-2";
			cpu-dai = <&tegra_dmic1>;
			codec-dai = <&spdif_dit2>;
			cpu-dai-name = "DMIC1";
			codec-dai-name = "dit-hifi";
			format = "i2s";
			bit-format = "s16_le";
			srate = <48000>;
			ignore_suspend;
			num-channel = <2>;
			name-prefix = "a";
			status = "okay";
		};
		nvidia,dai-link-4 {
			link-name = "spdif-dit-3";
			cpu-dai = <&tegra_dmic2>;
			codec-dai = <&spdif_dit3>;
			cpu-dai-name = "DMIC2";
			codec-dai-name = "dit-hifi";
			format = "i2s";
			bit-format = "s16_le";
			srate = <48000>;
			ignore_suspend;
			num-channel = <2>;
			name-prefix = "b";
			status = "okay";
		};
	};

	extcon {
		extcon@0 {
			status = "disabled";
		};
	};

	xusb_padctl@7009f000 {
		status = "okay";

		pads {
			usb2 {
				status = "okay";

				lanes {
					usb2-0 {
						status = "okay";
						nvidia,function = "xusb";
					};
					usb2-1 {
						status = "okay";
						nvidia,function = "xusb";
					};
					usb2-2 {
						status = "okay";
						nvidia,function = "xusb";
					};
				};
			};

			pcie {
				status = "okay";

				lanes {
					pcie-0 {
						status = "okay";
						nvidia,function = "pcie-x1";
					};
					pcie-1 {
						status = "okay";
						nvidia,function = "pcie-x4";
					};
					pcie-2 {
						status = "okay";
						nvidia,function = "pcie-x4";
					};
					pcie-3 {
						status = "okay";
						nvidia,function = "pcie-x4";
					};
					pcie-4 {
						status = "okay";
						nvidia,function = "pcie-x4";
					};
					pcie-5 {
						status = "okay";
						nvidia,function = "xusb";
					};
					pcie-6 {
						status = "okay";
						nvidia,function = "xusb";
					};
				};
			};
		};

		ports {
			usb2-0 {
				status = "okay";
				mode = "otg";
				nvidia,usb3-port-fake = <3>;
			};
			usb2-1 {
				status = "okay";
				mode = "host";
			};
			usb2-2 {
				status = "okay";
				mode = "host";
			};
			usb3-0 {
				status = "okay";
				nvidia,usb2-companion = <1>;
			};
		};
	};


	xusb@70090000 {
		phys = <&{/xusb_padctl@7009f000/pads/usb2/lanes/usb2-0}>,
				<&{/xusb_padctl@7009f000/pads/usb2/lanes/usb2-1}>,
				<&{/xusb_padctl@7009f000/pads/usb2/lanes/usb2-2}>,
				<&{/xusb_padctl@7009f000/pads/pcie/lanes/pcie-6}>;
		phy-names = "usb2-0", "usb2-1", "usb2-2", "usb3-0";
		#extcon-cells = <1>;
		nvidia,pmc-wakeup =
			<&tegra_pmc
				PMC_WAKE_TYPE_EVENT 39 PMC_TRIGGER_TYPE_HIGH>,
			<&tegra_pmc
				PMC_WAKE_TYPE_EVENT 40 PMC_TRIGGER_TYPE_HIGH>,
			<&tegra_pmc
				PMC_WAKE_TYPE_EVENT 41 PMC_TRIGGER_TYPE_HIGH>,
			<&tegra_pmc
				PMC_WAKE_TYPE_EVENT 42 PMC_TRIGGER_TYPE_HIGH>,
			<&tegra_pmc
				PMC_WAKE_TYPE_EVENT 44 PMC_TRIGGER_TYPE_HIGH>;
		status = "okay";
	};

	xudc@700d0000 {
		phys =  <&{/xusb_padctl@7009f000/pads/usb2/lanes/usb2-0}>;
		phy-names = "usb2";
		charger-detector = <&tegra_usb_cd>;
		#extcon-cells = <1>;
		status = "okay";
	};

	tegra_usb_cd: usb_cd {
		reg = <0x0 0x7009f000 0x0 0x1000>;
		phys = <&{/xusb_padctl@7009f000/pads/usb2/lanes/usb2-0}>;
		phy-names = "otg-phy";
		status = "disabled";
	};

	psy_extcon_xudc {
		status = "disabled";
		/delete-property/ dt-override-status-odm-data;
	};

	xotg {
		status = "disabled";
		#extcon-cells = <1>;
	};

	chosen {
		nvidia,bootloader-xusb-enable;
		nvidia,bootloader-vbus-enable=<0x1>;
		nvidia,fastboot_without_usb;
		nvidia,gpu-disable-power-saving;
		board-has-eeprom;
		firmware-blob-partition = "RP4";

		verified-boot {
			poweroff-on-red-state;
		};
	};

	gpu-dvfs-rework {
		status = "okay";
	};

	pwm-leds {
		compatible = "pwm-leds";
		lightbar {
			label = "led_lightbar";
			pwms = <&tegra_pwm 0 10000000>;
			gpios = <&gpio TEGRA_GPIO(V, 0) GPIO_ACTIVE_LOW>;
			max-brightness = <255>;
			default-brightness = <255>;
			linux,default-trigger = "default-on";
		};
	};

	pwm_regulators {
		compatible = "simple-bus";
		pwm-regulator@0 {
			regulator-min-microvolt = <708000>;
			regulator-max-microvolt = <1323400>;
		};

		pwm-regulator@1 {
			regulator-min-microvolt = <708000>;
			regulator-max-microvolt = <1323400>;
		};
	};
	soctherm@0x700E2000 {
		throttle-cfgs {
			/delete-node/ oc1;
		};
	};

	serial@70006000 { /* UART-A : UART1: Debug */
		compatible = "nvidia,tegra20-uart", "nvidia,tegra114-hsuart";
		console-port;
		sqa-automation-port;
		/delete-property/ resets;
		/delete-property/ reset-names;
		status = "okay";
	};

	serial@70006040 { /* UART-B : UART2 40 pin header */
		compatible = "nvidia,tegra114-hsuart";
		status = "okay";
	};

	serial@70006200 { /* UART-C : UART3 : M.2 Key E */
		compatible = "nvidia,tegra114-hsuart";
		dma-names = "tx";
		nvidia,adjust-baud-rates = <921600 921600 100>;
		status = "okay";
	};

	serial@70006300 { /* UART-D not used */
		status = "disabled";
	};

	i2c@7000c700 { /* i2c4 */
		status = "okay";
	};

	nvs_dsm {
		compatible = "nvidia,nvs_dsm";
		status = "okay";
	};

	dfll_cap: dfll-cdev-cap {
		compatible = "nvidia,tegra-dfll-cdev-action";
		act-dev = <&tegra_clk_dfll>;
		cdev-type = "DFLL-cap";
		#cooling-cells = <2>; /* min followed by max */
	};

	dfll_floor: dfll-cdev-floor {
		compatible = "nvidia,tegra-dfll-cdev-action";
		act-dev = <&tegra_clk_dfll>;
		cdev-type = "DFLL-floor";
		#cooling-cells = <2>; /* min followed by max */
	};

	i2c@7000c000 {
		tegra_nct72: temp-sensor@4c {
			status = "disabled";
		};
	};
	clock@70110000 {
                status = "okay";
                vdd-cpu-supply = <&cpu_ovr_reg>;
                nvidia,dfll-max-freq-khz = <1479000>;
	};

	dvfs {
                vdd-cpu-supply = <&cpu_ovr_reg>;
                nvidia,gpu-max-freq-khz = <921600>;
	};

	rtc {
		nvidia,pmc-wakeup = <&tegra_pmc PMC_WAKE_TYPE_EVENT 16
			PMC_TRIGGER_TYPE_HIGH>;
	};

	nvpmodel {
		status = "okay";
	};

	r8168 {
		isolate-gpio = <&gpio TEGRA_GPIO(X, 3) 0>;
	};

	tegra_udrm: tegra_udrm {
		compatible = "nvidia,tegra-udrm";
	};

	soft_wdt: soft_watchdog {
		status = "okay";
	};
};

#if LINUX_VERSION >= 414
#include <tegra210-linux-4.14.dtsi>
#endif
